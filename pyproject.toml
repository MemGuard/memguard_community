[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "memguard"
description = "Advanced Memory Leak Detection and Auto-Cleanup for Python Applications"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "MemGuard Team", email = "support@memguard.dev"},
]
maintainers = [
    {name = "MemGuard Team", email = "support@memguard.dev"},
]
keywords = [
    "memory leak detection",
    "memory profiling", 
    "resource monitoring",
    "auto cleanup",
    "garbage collection",
    "performance monitoring",
    "debugging tools",
    "production monitoring",
    "memory management",
    "resource tracking"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators", 
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
]
dependencies = [
    "psutil>=5.9.0",
    "python-dateutil>=2.8.0",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/memguard/memguard"
"Bug Reports" = "https://github.com/memguard/memguard/issues"
"Source" = "https://github.com/memguard/memguard"
"Documentation" = "https://docs.memguard.dev"
"Pro Upgrade" = "https://memguard.dev/pro"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
pro = [
    "firebase-admin>=6.0.0",
    "google-cloud-firestore>=2.0.0",
    "requests>=2.28.0",
]
web = [
    "flask>=2.0.0",
    "fastapi>=0.95.0", 
    "uvicorn>=0.20.0",
]
async = [
    "aiofiles>=22.0.0",
    "aiohttp>=3.8.0",
]

[project.scripts]
memguard = "memguard.cli:main"

[tool.setuptools]
packages = ["memguard", "memguard.guards", "memguard.detectors", "memguard.extensions"]

[tool.setuptools.package-data]
memguard = ["config/*.yaml", "config/*.json", "templates/*.html", "static/*.css", "static/*.js"]

[tool.setuptools_scm]
write_to = "memguard/_version.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["memguard"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]